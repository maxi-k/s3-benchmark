#!/bin/bash

# Check that the aws settings file exists
[ -f aws-settings ] && source ./aws-settings \
  || (echo "Need to provide AWS Settings bash file which sets AMI, IAM_PROFILE, AVAILABILITY_ZONE!"; exit)

REGION=${REGION:-"eu-central-1"}

echo -e "\n+--------------- \033[1;32mRunning with Configuration:\033[0m--------------+"
echo -e "| REGION:\t $REGION \033[59G|"
echo -e "| AVAIL.ZONE:\t ${AVAILABILITY_ZONE:-unset} \033[59G|"
echo -e "| AMI:\t\t $AMI\033[59G|"
echo -e "| IAM_PROFILE:\t $IAM_PROFILE\033[59G|"
# echo -e "| SUBNET:\t $SUBNET\t\033[59G|"
echo -e "+---------------------------------------------------------+\n\n"

if [ -z $AVAILABILITY_ZONE ]; then
    PLACEMENT_OPTION=""
else
    PLACEMENT_OPTION=" --placement \"AvailabilityZone=$AVAILABILITY_ZONE\""
fi

i=0
# read the list of instance types from stdin
while read instance_type
do
     # print the instance type
     echo "Running benchmark on $instance_type"

     # start the instance
     aws ec2 run-instances \
         --instance-type $instance_type \
         --image-id $AMI \
         --count 1 \
         --iam-instance-profile Name=$IAM_PROFILE \
         --instance-initiated-shutdown-behavior terminate \
         --user-data file://userdata \
         $PLACEMENT_OPTION \
         --region $REGION \
         # --subnet-id $SUBNET
     i=$[$i +1]

     # sleep for 30 minutes after 5 instances
     n=$(($i%5))
     if [ $n -eq 0 ]
     then
         echo "Sleeping for 30 minutes"
         sleep 1800
      fi
done
